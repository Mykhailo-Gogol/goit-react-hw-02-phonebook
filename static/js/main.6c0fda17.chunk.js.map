{"version":3,"sources":["components/Form/index.js","components/Filter/index.js","components/ContactList/index.js","App.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","event","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","htmlFor","type","placeholder","onChange","id","pattern","title","required","Component","Filter","filter","filterInputHandler","onFilter","ContactList","filteredContacts","onDeleteContact","length","className","map","onClick","App","contacts","formSubmitHandler","some","alert","filterHandler","deleteUserHandler","contactId","getContactArrayLS","localStorage","getItem","JSON","parse","setContactArrayLS","stringify","setItem","normalizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0fda17.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport shortid from \"shortid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={this.handleInputChange}\n              name=\"name\"\n              value={this.state.name}\n              id=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label htmlFor=\"number\">\n            <input\n              type=\"tel\"\n              placeholder=\"Number\"\n              onChange={this.handleInputChange}\n              name=\"number\"\n              value={number}\n              id=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nclass Filter extends Component {\n  state = {\n    filter: \"\",\n  };\n\n  handleInputChange = (event) => {\n    this.setState({\n      filter: event.target.value,\n    });\n  };\n\n  filterInputHandler = (event) => {\n    const { onFilter } = this.props;\n    this.handleInputChange(event);\n    onFilter(event.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"search contact\"\n          name=\"filter\"\n          value={this.state.filter}\n          onChange={this.filterInputHandler}\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactList extends Component {\n  render() {\n    const { filteredContacts, onDeleteContact } = this.props;\n\n    return (\n      <>\n        {filteredContacts().length ? (\n          <ol className=\"contact-list\">\n            {filteredContacts().map(({ name, number, id }) => {\n              return (\n                <li key={name}>\n                  <p className=\"contact-text\">\n                    <span>{name}</span>\n                    <span>{number}</span>\n                  </p>\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => onDeleteContact(id)}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n          </ol>\n        ) : (\n          <p>Contact list is empty</p>\n        )}\n      </>\n    );\n  }\n}\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport contacts from \"./data/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const { contacts } = this.state;\n    const getContactArrayLS = localStorage.getItem(\"contacts\");\n    this.setState({\n      contacts: JSON.parse(getContactArrayLS)\n        ? JSON.parse(getContactArrayLS)\n        : contacts,\n    });\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n    const setContactArrayLS = JSON.stringify(contacts);\n    localStorage.setItem(\"contacts\", setContactArrayLS);\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.some((e) => e.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      this.setState(({ contacts }) => {\n        return {\n          contacts: [...contacts, { name, number, id: shortid.generate() }],\n        };\n      });\n    }\n  };\n\n  filterHandler = (value) => {\n    this.setState(() => ({\n      filter: value,\n    }));\n  };\n\n  deleteUserHandler = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = () => {\n      const { filter, contacts } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      const filteredArray = contacts.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normalizedFilter) ||\n          number.toLowerCase().includes(normalizedFilter)\n      );\n      return filteredArray;\n    };\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter onFilter={this.filterHandler} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteUserHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}