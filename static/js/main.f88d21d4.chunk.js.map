{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","event","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","htmlFor","type","placeholder","onChange","id","Component","Filter","filter","filterInputHandler","onFilter","ContactList","uniqueId","contactFilter","appState","contacts","normalizedFilter","toLowerCase","includes","length","className","map","App","formSubmitHandler","filterHandler","getContactArrayLS","localStorage","getItem","JSON","parse","setContactArrayLS","stringify","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f88d21d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={this.handleInputChange}\n              name=\"name\"\n              value={this.state.name}\n              id={this.nameInputId}\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId}>\n            <input\n              type=\"tel\"\n              placeholder=\"Number\"\n              onChange={this.handleInputChange}\n              name=\"number\"\n              value={this.state.number}\n              id={this.numberInputId}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nclass Filter extends Component {\n  state = {\n    filter: \"\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterInputHandler = (event) => {\n    this.handleInputChange(event);\n    this.props.onFilter(this.state.filter);\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"search contact\"\n          name=\"filter\"\n          value={this.state.filter}\n          onChange={this.filterInputHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass ContactList extends Component {\n  uniqueId = () => {\n    return shortid.generate();\n  };\n\n  contactFilter = () => {\n    const { filter, contacts } = this.props.appState;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredArray = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredArray;\n  };\n\n  render() {\n    return (\n      <>\n        {this.contactFilter().length ? (\n          <ul className=\"contact-list\">\n            {this.contactFilter().map(({ name, number }) => {\n              return (\n                <li key={this.uniqueId()}>\n                  <p>{`${number} ${name} `}</p>\n                  <button className=\"delete-button\">Delete</button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>Contact list is empty</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ContactList;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const getContactArrayLS = localStorage.getItem(\"contacts\");\n    this.setState({\n      contacts: JSON.parse(getContactArrayLS)\n        ? JSON.parse(getContactArrayLS)\n        : this.state.contacts,\n    });\n  }\n\n  componentDidUpdate() {\n    const setContactArrayLS = JSON.stringify(this.state.contacts);\n    localStorage.setItem(\"contacts\", setContactArrayLS);\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, { name, number }],\n      };\n    });\n  };\n\n  filterHandler = (value) => {\n    if (value) {\n      this.setState({\n        filter: value,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter onFilter={this.filterHandler} />\n        <ContactList appState={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}